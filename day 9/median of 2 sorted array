class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int n=nums1.size();
        int m=nums2.size();
        if(n>m){
          return findMedianSortedArrays(nums2,nums1);
        }
        int l=0;
        int h=n;
        while(l<=h){
          int c1=(l+h)/2;
          int c2=(n+m+1)/2-c1;
          int l1,l2,r1,r2;
          l1=(c1==0)?INT_MIN:nums1[c1-1];
          l2=c2==0?INT_MIN:nums2[c2-1];
          r1=c1==n?INT_MAX:nums1[c1];
          r2=c2==m?INT_MAX:nums2[c2];
          if(l1<=r2 && l2<=r1){
            if((n+m)%2){
              return max(l1,l2);
            }
            return ((max(l1,l2)+min(r1,r2))/2.0);
          }
          else if(l1>r2){
            h=c1-1;
          }
          else{
            l=c1+1;
          }
        }
        return -1;
    }
};
