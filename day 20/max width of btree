/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
#define mod 1000000000+7
class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        queue<pair<TreeNode*,unsigned long long>>q;
        q.push({root,0});
        int ans=0;
        while(!q.empty()){
          int n=q.size();
          int l,r;
          l=q.front().second;
          r=l;
          for(int j=0;j<n;j++){
            auto i=q.front();
            q.pop();
            r=(i.second);
            if(i.first->left){
              q.push({i.first->left,(2*i.second)+1});
            }
            if(i.first->right){
              q.push({i.first->right,(2*i.second)+2});
            }
          }
          ans=max(ans,(r-l+1));
        }
        return ans;
    }
};
