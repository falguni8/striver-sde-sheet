class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>>ans;
        int n=nums.size();
        map<int,int>mp;
        set<vector<int>>st;
        sort(nums.begin(),nums.end());
        for(int i=0;i<n-2;i++){
          if (i == 0 || (i > 0 && nums[i] != nums[i - 1])){
            int l=i+1;
            int r=n-1;
            while(l<r){
              int s=nums[i]+nums[l]+nums[r];
              if(s==0){
                st.insert({nums[i],nums[l],nums[r]});
                while(l<r && nums[l]==nums[l+1]){
                  l++;
                }
                while(r>l && nums[r]==nums[r-1]){
                  r--;
                }
                l++;
                r--;
              }
              else if(s<0){
                l++;
              }
              else{
                r--;
              }
            }
          }
        }
        for(auto i:st){
          ans.push_back(i);
        }
        return ans;
    }
};
