vector<int> Solution::solve(vector<int> &A, vector<int> &B, int C) {
    priority_queue<pair<int, pair<int, int>>> pq;
    sort(A.begin(),A.end(),greater<int>());
    sort(B.begin(),B.end(),greater<int>());
    vector<int>v;
    int n=A.size();
    set<pair<int, int>> visited;
    pq.push(make_pair(A[0]+B[0],make_pair(0,0)));
    visited.insert({0,0});
    while(!pq.empty() && C>0){
        auto t=pq.top();
        pq.pop();
        int s=t.first;
        int i=t.second.first;
        int j=t.second.second;
        v.push_back(s);
        if(i+1<n && visited.find(make_pair(i + 1, j)) == visited.end()){
        pq.push(make_pair(A[i+1]+B[j],make_pair(i+1,j)));
        //pq.push(A[i]+B[j+1],i,j+1);
        visited.insert({i+1,j});
        }
        if(j+1<n && visited.find(make_pair(i, j+1)) == visited.end()){
        pq.push(make_pair(A[i]+B[j+1],make_pair(i,j+1)));
        visited.insert({i,j+1});
        }
        C--;
    }
    return v;
}
