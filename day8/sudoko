class Solution {
public:
    bool check(int i,int j,vector<vector<char>>&b,int n,int k){
      //row column
      for(int p=0;p<n;p++){
        if(b[p][j]==k || b[i][p]==k){
          return false;
        }
      }
      //check box
      int r=i/3*3;
      int c=j/3*3;
      for(int p=0;p<3;p++){
        for(int q=0;q<3;q++){
          if(b[p+r][c+q]==k){
            return false;
          }
        }
      }
      return true;

    }
    bool fun(vector<vector<char>>&board){
      //base condn
      int n=board.size();
      for(int i=0;i<9;i++){
        for(int j=0;j<n;j++){
            if(board[i][j]=='.'){
              for(char k='1';k<='9';k++){
                if(check(i,j,board,n,k)){
                  board[i][j]=k;
                  if(fun(board)){
                    return true;
                  }
                  board[i][j]='.';
                }
              }
              return false;
          }
        }
      }
      return true;
    }
    void solveSudoku(vector<vector<char>>& board) {
        fun(board);
    }
};
