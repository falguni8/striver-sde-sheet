class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        int t=0;
        queue<pair<int,int>>q;
        for(int i=0;i<grid.size();i++){
          for(int j=0;j<grid[0].size();j++){
            if(grid[i][j]!=0){
              t++;
            }
            if(grid[i][j]==2){
              q.push({i,j});
            }
          }
        }
        int c=0;
        int ans=0;
        int n=grid.size();
        int m=grid[0].size();
        vector<int>dx={0,0,1,-1};
        vector<int>dy={1,-1,0,0};
        while(!q.empty()){
          c+=q.size();
          int k=q.size();
          while(k--){
            int a=q.front().first;
            int b=q.front().second;
            q.pop();
            for(int i=0;i<4;i++){
                int x=dx[i]+a;
                int y=dy[i]+b;
                if(x<0 || x>=n || y<0 || y>=m || grid[x][y]!=1){
                  continue;
                }
                grid[x][y]=2;
                q.push({x,y});
            }
          }
          if(!q.empty()){
            ans++;
          }
        }
        if(c==t){
          return ans;
        }
        return -1;
    }
};
