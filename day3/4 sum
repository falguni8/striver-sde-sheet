class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
    int n = nums.size();
    set<vector<int>> st;
    sort(nums.begin(),nums.end());
    for (int i = 0; i < n; i++) {
        if(i>0 && nums[i]==nums[i-1]){
            continue;
        }
        for (int j = i + 1; j < n; j++) {
            if(j>i+1 && nums[j]==nums[j-1]){
                continue;
            }
            int l=j+1;
            int r=n-1;
            while(l<r){
                long long int s=nums[i]+nums[j];
                long long int s1=nums[l]+nums[r];
                if((s+s1)==target){
                    st.insert({nums[i],nums[j],nums[l],nums[r]});
                    l++;
                    r--;
                    if(l<r && nums[l]==nums[l-1]){
                        l++;
                    }
                    if(l<r && nums[r]==nums[r+1]){
                        r--;
                    }
                }
                else if((s+s1)<target){
                    l++;
                }
                else{
                    r--;
                }
            }
        }
    }
    vector<vector<int>> ans(st.begin(), st.end());
    return ans;
}
};
