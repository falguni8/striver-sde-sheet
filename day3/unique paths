class Solution {
public:
    int findp(int i,int j,int x,int y,vector<vector<int>>& v,vector<vector<int>>& dp){
        if(i>x || j>y){
            return 0;
        }
        if(x==i && j==y){
            return 1;
        }
        if(dp[i][j]!=-1){
            return dp[i][j];
        }
        else{
            int c1=0;
            int c2=0;
            if(dp[i+1][j]==-1){
                c1=findp(i+1,j,x,y,v,dp);
            }
            else{
                c1=dp[i+1][j];
            }
            if(dp[i][j+1]==-1){
                c2=findp(i,j+1,x,y,v,dp);
            }
            else{
                c2=dp[i][j+1];
            }
            return dp[i][j]=c1+c2;
        }
    }
    int uniquePaths(int m, int n) {
        vector<vector<int>> dp(m+1, vector<int>(n+1, -1));
        vector<vector<int>>v(m,vector<int>(n,0));
        //return dp[m-1][n-1];
        if(m==1 && n==1){
            return 1;
        }
        return findp(0,0,m-1,n-1,v,dp);
        return dp[0][0];
    }
};
