/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) 
    {
        vector<int> v;
        while(root){
            if(root->left==NULL){
              v.push_back(root->val);
              root=root->right;
            }
            else{
              TreeNode *curr=root->left;
              while(curr->right!=NULL && curr->right!=root ){
                curr=curr->right;
              }
              if(curr->right){
                //right move already visited
                curr->right=NULL;
                v.push_back(root->val);
                root=root->right;
              }
              else{
                curr->right=root;
                root=root->left;
              }
            }
        }
        return v;
    }
};
